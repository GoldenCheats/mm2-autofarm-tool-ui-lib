-- ==== CONFIG SECTION (uses _G variables) ====
local toggleTabletMode = (_G.toggleTabletMode ~= nil and _G.toggleTabletMode) or false
local toggleRejoinIfLoading = (_G.toggleRejoinIfLoading ~= nil and _G.toggleRejoinIfLoading) or true
local toggleRejoinOnError = (_G.toggleRejoinOnError ~= nil and _G.toggleRejoinOnError) or true
-- ===========================================


-- Load the UI library
local UILibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/GoldenCheats/mm2-autofarm-tool-ui-lib/refs/heads/main/ui%20lib"))()

-- Try to detect executor name
local executor = "Unknown"
if identifyexecutor then
    local result = identifyexecutor()
    if typeof(result) == "string" then
        executor = result
    elseif typeof(result) == "table" then
        executor = result[1] or result.Name or "Unknown"
    end
end

-- Apply executor name to UI title
local MainUI = UILibrary.Load("MM2 Farming Tool - " .. executor)
local MainPage = MainUI.AddPage("Main")
local HomePage = MainUI.AddPage("Settings")

MainPage.AddLabel("Safe autofarm ~ Fling murder once done ~ Auto reloads if kicked~")

MainPage.AddButton("Highlight Hub (Key system)", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/ThatSick/HighlightMM2/main/Main"))()
end)


-- === SETTINGS PAGE ===
HomePage.AddLabel("Safety Features")
HomePage.AddLabel("PUT THIS SCRIPT IN YOUR AUTO EXECUTE TO STAY SAFE.")


-- Tablet Toggle
local autoTabletEnabled = toggleTabletMode
HomePage.AddToggle("Auto Select Tablet Mode", toggleTabletMode, function(value)
    autoTabletEnabled = value
end)

task.spawn(function()
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")

    local function log(msg)
        print("[TabletAutoSelect] " .. msg)
    end

    while true do
        if autoTabletEnabled then
            local deviceSelect = playerGui:FindFirstChild("DeviceSelect")
            if deviceSelect and deviceSelect.Enabled then
                local container = deviceSelect:FindFirstChild("Container")
                local tablet = container and container:FindFirstChild("Tablet")
                local button = tablet and tablet:FindFirstChild("Button")

                if button and (button:IsA("TextButton") or button:IsA("ImageButton")) then
                    if button.Visible then
                        log("Firing Tablet button click event.")
                        firesignal(button.MouseButton1Click)
                    else
                        log("Button found but not visible yet.")
                    end
                else
                    log("Tablet.Button not found or not a button.")
                end
            end
        end
        task.wait(0.2)
    end
end)


-- Alt Rejoin Toggle
local altRejoinEnabled = toggleRejoinIfLoading
HomePage.AddToggle("Rejoin if loading GUI stuck (alt)", toggleRejoinIfLoading, function(value)
    altRejoinEnabled = value
end)

task.spawn(function()
    local Players = game:GetService("Players")
    local TeleportService = game:GetService("TeleportService")

    local player = Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")

    local function rejoin()
        local placeId = game.PlaceId
        local jobId = game.JobId
        TeleportService:TeleportToPlaceInstance(placeId, jobId, player)
    end

    local loadingGui = playerGui:WaitForChild("Loading", 10)

    if loadingGui then
        local loadingRemoved = false

        loadingGui.AncestryChanged:Connect(function()
            if not loadingGui:IsDescendantOf(game) then
                loadingRemoved = true
                print("hi")
            end
        end)

        task.delay(30, function()
            if altRejoinEnabled and not loadingRemoved then
                warn("Loading GUI still present. Rejoining...")
                rejoin()
            end
        end)
    else
        warn("Loading GUI did not appear at all.")
    end
end)


-- Error Rejoin Toggle
local errorTeleportEnabled = toggleRejoinOnError
HomePage.AddToggle("Rejoin on error message", toggleRejoinOnError, function(value)
    errorTeleportEnabled = value
end)

local GuiService = game:GetService("GuiService")
local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local player = Players.LocalPlayer

local function onErrorMessageChanged(errorMessage)
    if errorTeleportEnabled then
        if errorMessage and errorMessage ~= "" then
            print("Error detected: " .. errorMessage)
            if player then
                wait()
                TeleportService:Teleport(game.PlaceId, player)
            end
        end
    end
end

GuiService.ErrorMessageChanged:Connect(onErrorMessageChanged)


-- Extra Utilities
HomePage.AddButton("Anti AFK (Incase it don't work on other scripts)", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/hassanxzayn-lua/Anti-afk/main/antiafkbyhassanxzyn"))();
end)

HomePage.AddButton("Server Hop", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/Cesare0328/my-scripts/refs/heads/main/CachedServerhop.lua'))()
end)
